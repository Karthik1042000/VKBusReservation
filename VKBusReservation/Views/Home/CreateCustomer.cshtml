@using VKBusReservation.Models.DTO
@model AddCustomerDTO
@{
    string title = "Create Customer";
    if (Model.CustomerId > 0)
    {
        title = "Edit Customer";
    }
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<button type="button" class="btn btn-light pb-2"
        style="background-color:lightgoldenrodyellow;" onclick="GoCustomer()">
    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-left" viewBox="0 0 16 16">
        <path fill-rule="evenodd" d="M15 8a.5.5 0 0 0-.5-.5H2.707l3.147-3.146a.5.5 0 1 0-.708-.708l-4 4a.5.5 0 0 0 0 .708l4 4a.5.5 0 0 0 .708-.708L2.707 8.5H14.5A.5.5 0 0 0 15 8z" />
    </svg>
    Back to List
</button>
<center> <h2 class="text-danger">@title</h2></center>

<style>
    .required:after {
        content: " *";
        color: red;
    }
</style>
@using (Html.BeginForm(FormMethod.Post, new { id = "CustomerForm" }))
{
    <div class="container border rounded-3  pt-3  bg-light text-dark w-50">
        @Html.HiddenFor(m => m.CustomerId )
        <div class="mb-3  row justify-content-center">
            <div class="col-3">
                <label class="form-label required"> Name</label>
            </div>
            <div class="col-4">
                @Html.TextBoxFor(m => m.CustomerName , new {@class="form-control", required = "required" , maxlength = "20"} )
            </div>
        </div>

        <div class="mb-3 row justify-content-center">
            <div class="col-3">
                <label class="form-label required">Email Id</label>
            </div>
            <div class="col-4">
                @Html.TextBoxFor(m => m.EmailId , new {@class="form-control", required = "required" , type= "email"})
            </div>
        </div>
        <div class="mb-3 row justify-content-center">
            <div class="col-3">
                <label class="form-label required">Role</label>
            </div>
            <div class="col-4">
            @if (User.Identity.IsAuthenticated)
            {
                var role = User.Identity.GetClaimValue("role");
                if (role == "Admin")
                {
                        @Html.DropDownListFor(model => model.RoleId,Model.RoleIds  , new { required = "required" ,@class="form-control"})
                }
                else
                {
                        { Model.RoleId = 1; }
                        @Html.HiddenFor(model => model.RoleId)
                        @Html.DropDownListFor(model => model.RoleId,Model.RoleIds  , new { @disabled="disabled",required = "required" ,@class="form-control"}) 
                }
            }
                else
                {
                    { Model.RoleId = 1; }
                    @Html.HiddenFor(model => model.RoleId)
                    @Html.DropDownListFor(model => model.RoleId,Model.RoleIds  , new { @disabled="disabled",required = "required" ,@class="form-control"})
                }
            </div>
        </div>
        <div class="mb-3 row justify-content-center">
            <div class="col-3">
                <label class="form-label required">Phone Number</label>
            </div>
            <div class="col-4">
                @Html.TextBoxFor(m => m.PhoneNumber , new {@class="form-control", required = "required" ,type ="number",minlength = "10" ,maxlength = "10" ,min="6000000000",max="9999999999"})
            </div>
        </div>
        <div class="mb-3 row justify-content-center">
            <div class="col-3">
                <label class="form-label required">Pincode</label>
            </div>
            <div class="col-4">
                @Html.TextBoxFor(m => m.Pincode , new {@class="form-control",  type ="number" ,min= "100000" ,max = "999999"})
            </div>
        </div>
        <div class="mb-3 row justify-content-center">
            <div class="col-3">
                <label class="form-label required">City</label>
            </div>
            <div class="col-4">
                @Html.TextBoxFor(m => m.City , new {@class="form-control", required = "required" , maxlength = "20"})
            </div>
        </div>
        <div class="mb-3 row justify-content-center">
            <div class="col-3">
                <label class="form-label required">Password</label>
            </div>
            <div class="col-4">
                @Html.TextBoxFor(m => m.Password , new {@class="form-control", required = "required" ,type="password",minlength = "6",maxlength = "10"})
            </div>
        </div>
        <div class="mb-3 row justify-content-center">
            <div class="col-3">
                <button type="submit" class="btn btn-outline-primary">Submit</button>
            </div>
        </div>
    </div>

}






